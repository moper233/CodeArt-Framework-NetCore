<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CanNotDeleteNonAggregateRoot" xml:space="preserve">
    <value>Can not delete non-AggregateRoot objects</value>
  </data>
  <data name="ConstructionParameterError" xml:space="preserve">
    <value>The data for the {0} construct parameter {1} was not found,Please consider whether you need a custom load method</value>
  </data>
  <data name="ConstructionParameterNoProperty" xml:space="preserve">
    <value>Did not find the attribute {1} definition corresponding to the constructor {0}. Please check whether the property has been marked PropertyRepositoryAttribute or how the custom constructor is loaded</value>
  </data>
  <data name="CreateChildTable" xml:space="preserve">
    <value>CreateChildTable error,master {0},FieldType {1},objectType{2}</value>
  </data>
  <data name="CreateInheritedTableError" xml:space="preserve">
    <value>CreateInheritedTable error, type {0} table type {1}</value>
  </data>
  <data name="CreateObjectCollectionError" xml:space="preserve">
    <value>When you create a member of type {0}, you must specify the object in which the attribute is located, and it is possible to construct a constructor with a constructor parameter of type {0}, resulting in a two-way construct reference</value>
  </data>
  <data name="DomainObjectTypeWrong" xml:space="preserve">
    <value>In the domain design, in addition to the basic numerical type and emptyable type, all objects should inherit from the value of the object, the root object, the reference object (entity object),remote root</value>
  </data>
  <data name="LoadPropertyError" xml:space="preserve">
    <value>The data for the property {0} was not successfully loaded. Please consider whether you need custom loading</value>
  </data>
  <data name="NestedCollection" xml:space="preserve">
    <value>The members of the collection are also of the collection type, and it is not recommended to develop such a complex object relationship in the domain design</value>
  </data>
  <data name="NoDatabaseAgent" xml:space="preserve">
    <value>No registered database agent</value>
  </data>
  <data name="NoDbType" xml:space="preserve">
    <value>There is no {0} corresponding database type</value>
  </data>
  <data name="NoPersistentOperation" xml:space="preserve">
    <value>No persistent operation for domain type {0} {1}</value>
  </data>
  <data name="NoQuery" xml:space="preserve">
    <value>No query {0}</value>
  </data>
  <data name="NotCorrectSqlSelect" xml:space="preserve">
    <value>{0} is not the correct sql select query</value>
  </data>
  <data name="NotFoundDbField" xml:space="preserve">
    <value>Could not find DbField for type {0}</value>
  </data>
  <data name="NotFoundDerivedType" xml:space="preserve">
    <value>Did not find the {0} domain of the derived class type corresponding to the data table</value>
  </data>
  <data name="NotFoundFillArguments" xml:space="preserve">
    <value>Type {0} query {1} database{1} did not find the method to fill the parameters</value>
  </data>
  <data name="NotFoundQueryExpression" xml:space="preserve">
    <value>Type {0} query {1} database{1} did not find the query expression</value>
  </data>
  <data name="NotFoundTableField" xml:space="preserve">
    <value>Table {0} no fields {1}</value>
  </data>
  <data name="NotSupportDatabase" xml:space="preserve">
    <value>{0} does not support database {1}</value>
  </data>
  <data name="NotSupportDbType" xml:space="preserve">
    <value>Data access does not support type {0}</value>
  </data>
  <data name="NotSupportMultipleProperties" xml:space="preserve">
    <value>{0} error, does not support querying multiple properties</value>
  </data>
  <data name="PageNeedOrder" xml:space="preserve">
    <value>The page query needs to specify a sorting statement</value>
  </data>
  <data name="PersistentObjectError" xml:space="preserve">
    <value>Type {0} error,Direct persistence of the object type must be IAggregateRoot or IEntityObjectPro</value>
  </data>
  <data name="PropertyValueRepeated" xml:space="preserve">
    <value>property {0} value {1} repeated</value>
  </data>
  <data name="QueryExpressionMalformed" xml:space="preserve">
    <value>Query expression '{0}' is malformed</value>
  </data>
  <data name="QueryParamTypeError" xml:space="preserve">
    <value>Query parameter {0} type error</value>
  </data>
  <data name="UnableGetId" xml:space="preserve">
    <value>Unable to get the id of object {0}</value>
  </data>
  <data name="UnableLoadExternalObject" xml:space="preserve">
    <value>Can not load external images other than cohesive models, please customize the loading method, data path {0}</value>
  </data>
  <data name="UnrecognizedSqlFunction" xml:space="preserve">
    <value>Unrecognized sql function {0}</value>
  </data>
</root>